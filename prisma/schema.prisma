datasource db {
  provider = "mysql"
  url      = "mysql://root:admin@localhost:3306/news"
}

generator client {
  provider = "prisma-client-js"
}

// model Category {
//   id          BigInt       @id @default(autoincrement()) @db.UnsignedBigInt()
//   cate_name   String       @db.VarChar(200)
//   slug        String       @unique @db.VarChar(200)
//   visible     Boolean      @default(false)
//   size        BigInt       @default(0) @db.UnsignedBigInt()
//   parent_id   BigInt       @unique @db.UnsignedBigInt()
//   type        CategoryType @default(CATEGORY) //or subcategory
//   discription String?      @db.VarChar(200)
//   thumb       String?      @db.VarChar(200) // to post -> media

//   @@index([id, slug, parent_id])
// }

model comment {
  id                 BigInt      @id @default(autoincrement()) @db.UnsignedBigInt()
  comment_post_id    BigInt      @db.UnsignedBigInt()
  comment_author     String      @db.VarChar(200)
  comment_author_id  BigInt      @db.UnsignedBigInt()
  comment_author_url String      @db.VarChar(200)
  comment_author_ip  String      @db.VarChar(100)
  comment_date       DateTime    @default(now()) @db.DateTime()
  comment_date_gmt   DateTime    @default(now()) @db.DateTime()
  comment_content    String      @db.Text()
  comment_type       CommentType @default(COMMENT) // or reply or review or question
  comment_parent     BigInt?     @db.UnsignedBigInt()

  @@index([id, comment_post_id])
}


model comment_meta {
  meta_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt()
  comment_id BigInt @db.UnsignedBigInt()
  meta_key   String @db.VarChar(100)
  meta_value String @db.VarChar(300)
}

model post {
  id                     BigInt            @id @default(autoincrement()) @db.UnsignedBigInt()
  post_author_id         BigInt            @db.UnsignedBigInt()
  post_author_ip         String            @db.VarChar(100)
  post_date              DateTime          @default(now()) @db.DateTime()
  post_date_modified     DateTime          @default(now()) @db.DateTime()
  post_date_gmt          DateTime          @default(now()) @db.DateTime()
  post_date_modified_gmt DateTime          @default(now()) @db.DateTime()
  post_title             String            @db.Text()
  post_slug              String            @unique @db.VarChar(300)
  post_content           String            @db.Text()
  post_status            PostStatus        @default(HIDDEN)
  post_comment_status    PostCommentStatus @default(DISABLE)
  post_mime_type         String?           @db.VarChar(20)
  post_type              PostType          @default(ARTICLE)
  comment_count          BigInt            @default(0) @db.UnsignedBigInt()
  post_category_id       BigInt            @db.UnsignedBigInt()
  post_excerpt           String            @db.Text()
  post_password          String?           @db.VarChar(255)

  @@index([id, post_author_id, post_date, post_mime_type])
}

model history {
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt()
  user_id           BigInt   @db.UnsignedBigInt()
  comment_author_ip String   @unique @db.VarChar(100)
  comment_date      DateTime @default(now()) @db.DateTime()
  comment_date_gmt  DateTime @default(now()) @db.DateTime()
  value             Json     @db.Json
  from_table        String   @db.VarChar(30)
  action            String   @db.VarChar(20)

  @@index([id, user_id])
}

model siteinfo {
  id    Int    @id @default(autoincrement()) @db.Int()
  key   String @db.VarChar(30)
  value String @db.Text

  @@index([id, key])
}

model user {
  id                  BigInt        @id @default(autoincrement()) @db.UnsignedBigInt()
  ip                  String        @db.VarChar(100)
  sign_up_at          DateTime      @default(now()) @db.DateTime()
  display_name        String        @db.Text()
  username            String        @unique @db.VarChar(100)
  password            String        @db.VarChar(255)
  user_status         UserStatus    @default(REGISTRATION)
  user_comment_status CommentStatus @default(DISABLE)
  role                Role          @default(USER)
  comment_count       BigInt        @default(0) @db.BigInt()
  active_key          String?       @db.VarChar(255)
  user_email          String        @unique @db.VarChar(100)
  user_url            String        @unique @db.VarChar(100)

  @@index([id, user_email, username])
}

// model Tags {
//   id          BigInt @id @default(autoincrement()) @db.UnsignedBigInt()
//   tag_name    String @db.VarChar(50)
//   slug        String @unique @db.VarChar(50)
//   size        BigInt @default(0) @db.UnsignedBigInt()
//   description String @db.VarChar(300)

//   @@index([id, slug])
// }

// model TagOnPost {
//   id      BigInt  @id @default(autoincrement()) @db.UnsignedBigInt()
//   post_id BigInt  @db.UnsignedBigInt()
//   tagId   BigInt  @db.UnsignedBigInt()
//   postId  BigInt? @db.UnsignedBigInt()

//   @@index([id, post_id, tagId])
// }

// model ProductGalery {
//   id       BigInt @id @default(autoincrement()) @db.UnsignedBigInt()
//   post_id  BigInt @db.UnsignedBigInt()
//   media_id BigInt @db.UnsignedBigInt()
// }

// model Session {
//   id BigInt @id @default(autoincrement()) @db.UnsignedBigInt()
// }
model postmeta {
  meta_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt()
  post_id    BigInt @db.UnsignedBigInt()
  meta_key   String @db.VarChar(100)
  meta_value String @db.VarChar(300)
}

model term_taxonomy {
  term_taxonomy_id BigInt       @id @default(autoincrement()) @db.UnsignedBigInt()
  terms            terms        @relation(fields: [term_id], references: [term_id])
  term_id          BigInt       @db.UnsignedBigInt()
  taxonomy         TaxonomyType @default(CATEGORY)
  discription      String?      @db.VarChar(300)
  parent           BigInt?      @db.UnsignedBigInt()
  count            BigInt       @default(0) @db.UnsignedBigInt()
}

model terms {
  term_id       BigInt          @id @default(autoincrement()) @db.UnsignedBigInt()
  name          String          @db.VarChar(100)
  slug          String          @db.VarChar(100)
  term_group    BigInt          @default(0) @db.UnsignedBigInt()
  term_taxonomy term_taxonomy[]
}

enum TaxonomyType {
  CATEGORY
  SUBCATEGORY
  TAG
}

enum CommentType {
  REVIEW
  COMMENT
  REPLY
}

enum PostType {
  ARTICLE
  PRODUCT
  MEDIA
}

enum Role {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  REGISTRATION
  DISABLE
}

enum CommentStatus {
  ACTIVE
  DISABLE
}

enum PostCommentStatus {
  ACTIVE
  DISABLE
}

enum PostStatus {
  PUBLIC
  HIDDEN
  SCHEDULE
}

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   role    Role     @default(USER)
//   posts   Post[]
//   profile Profile?
// }

// model Profile {
//   id     Int    @id @default(autoincrement())
//   bio    String
//   user   User   @relation(fields: [userId], references: [id])
//   userId Int    @unique
// }

// model Post {
//   id         Int        @id @default(autoincrement())
//   createdAt  DateTime   @default(now())
//   title      String
//   published  Boolean    @default(false)
//   author     User       @relation(fields: [authorId], references: [id])
//   authorId   Int
//   categories Category[]
// }

// model Category {
//   id    Int    @id @default(autoincrement())
//   name  String
//   posts Post[]
// }
